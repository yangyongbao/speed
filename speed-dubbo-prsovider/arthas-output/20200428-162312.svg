<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (132 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (37 samples, 28.03%)</title><rect x="10.0" y="963.0" width="330.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (3 samples, 2.27%)</title><rect x="10.0" y="947.0" width="26.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="958.0">i..</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (3 samples, 2.27%)</title><rect x="10.0" y="931.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="942.0">i..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (3 samples, 2.27%)</title><rect x="10.0" y="915.0" width="26.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="926.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (3 samples, 2.27%)</title><rect x="10.0" y="899.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="910.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (3 samples, 2.27%)</title><rect x="10.0" y="883.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="894.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (3 samples, 2.27%)</title><rect x="10.0" y="867.0" width="26.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="878.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (3 samples, 2.27%)</title><rect x="10.0" y="851.0" width="26.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="862.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (3 samples, 2.27%)</title><rect x="10.0" y="835.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="846.0">i..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="819.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="803.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="787.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (2 samples, 1.52%)</title><rect x="10.0" y="771.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="755.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="739.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.52%)</title><rect x="10.0" y="723.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelRead (2 samples, 1.52%)</title><rect x="10.0" y="707.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.receive (2 samples, 1.52%)</title><rect x="10.0" y="691.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushDataIfNecessary (2 samples, 1.52%)</title><rect x="10.0" y="675.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (2 samples, 1.52%)</title><rect x="10.0" y="659.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onData (2 samples, 1.52%)</title><rect x="10.0" y="643.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (2 samples, 1.52%)</title><rect x="10.0" y="627.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (2 samples, 1.52%)</title><rect x="10.0" y="611.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (2 samples, 1.52%)</title><rect x="10.0" y="595.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (2 samples, 1.52%)</title><rect x="10.0" y="579.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (2 samples, 1.52%)</title><rect x="10.0" y="563.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (2 samples, 1.52%)</title><rect x="10.0" y="547.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (2 samples, 1.52%)</title><rect x="10.0" y="531.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (2 samples, 1.52%)</title><rect x="10.0" y="515.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.access$500 (2 samples, 1.52%)</title><rect x="10.0" y="499.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.deliver (2 samples, 1.52%)</title><rect x="10.0" y="483.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>io/termd/core/readline/EventQueue.next (1 samples, 0.76%)</title><rect x="10.0" y="467.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.76%)</title><rect x="10.0" y="451.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$200 (1 samples, 0.76%)</title><rect x="18.9" y="467.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.9" y="478.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.handle (1 samples, 0.76%)</title><rect x="18.9" y="451.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.9" y="462.0"></text>
</g>
<g>
<title>io/termd/core/readline/functions/BackwardChar.apply (1 samples, 0.76%)</title><rect x="18.9" y="435.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.9" y="446.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (1 samples, 0.76%)</title><rect x="18.9" y="419.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.9" y="430.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (1 samples, 0.76%)</title><rect x="18.9" y="403.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.9" y="414.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.76%)</title><rect x="18.9" y="387.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="398.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.76%)</title><rect x="18.9" y="371.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="382.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.sendChunk (1 samples, 0.76%)</title><rect x="18.9" y="355.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.9" y="366.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.76%)</title><rect x="18.9" y="339.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.9" y="350.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.76%)</title><rect x="18.9" y="323.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.9" y="334.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.76%)</title><rect x="18.9" y="307.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.9" y="318.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.76%)</title><rect x="18.9" y="291.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.9" y="302.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.write (1 samples, 0.76%)</title><rect x="18.9" y="275.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.9" y="286.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (1 samples, 0.76%)</title><rect x="18.9" y="259.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.9" y="270.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.76%)</title><rect x="18.9" y="243.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.9" y="254.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.76%)</title><rect x="18.9" y="227.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="238.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.76%)</title><rect x="18.9" y="211.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.9" y="222.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.76%)</title><rect x="18.9" y="195.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="206.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.76%)</title><rect x="18.9" y="179.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="190.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.76%)</title><rect x="18.9" y="163.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.9" y="174.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.76%)</title><rect x="18.9" y="147.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="158.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.76%)</title><rect x="18.9" y="131.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.9" y="142.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.76%)</title><rect x="18.9" y="115.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="126.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (1 samples, 0.76%)</title><rect x="18.9" y="99.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.76%)</title><rect x="18.9" y="83.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.76%)</title><rect x="18.9" y="67.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.76%)</title><rect x="18.9" y="51.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="62.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.76%)</title><rect x="18.9" y="35.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.9" y="46.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (1 samples, 0.76%)</title><rect x="27.9" y="819.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1 samples, 0.76%)</title><rect x="27.9" y="803.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.9" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.76%)</title><rect x="27.9" y="787.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.76%)</title><rect x="27.9" y="771.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.76%)</title><rect x="27.9" y="755.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.9" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.76%)</title><rect x="27.9" y="739.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.76%)</title><rect x="27.9" y="723.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (1 samples, 0.76%)</title><rect x="27.9" y="707.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.9" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (1 samples, 0.76%)</title><rect x="27.9" y="691.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (1 samples, 0.76%)</title><rect x="27.9" y="675.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.9" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (1 samples, 0.76%)</title><rect x="27.9" y="659.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.76%)</title><rect x="27.9" y="643.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.9" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.76%)</title><rect x="27.9" y="627.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.76%)</title><rect x="27.9" y="611.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.9" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.76%)</title><rect x="27.9" y="595.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.76%)</title><rect x="36.8" y="947.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.76%)</title><rect x="36.8" y="931.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.8" y="942.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (1 samples, 0.76%)</title><rect x="36.8" y="915.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.8" y="926.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.76%)</title><rect x="36.8" y="899.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.8" y="910.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.76%)</title><rect x="36.8" y="883.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.8" y="894.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (1 samples, 0.76%)</title><rect x="36.8" y="867.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.8" y="878.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (1 samples, 0.76%)</title><rect x="36.8" y="851.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.8" y="862.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (1 samples, 0.76%)</title><rect x="36.8" y="835.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.8" y="846.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.76%)</title><rect x="36.8" y="819.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.8" y="830.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.76%)</title><rect x="36.8" y="803.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.8" y="814.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.76%)</title><rect x="36.8" y="787.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.8" y="798.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.76%)</title><rect x="36.8" y="771.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="39.8" y="782.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.76%)</title><rect x="36.8" y="755.0" width="9.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.8" y="766.0"></text>
</g>
<g>
<title>GCC_except_table15 (1 samples, 0.76%)</title><rect x="36.8" y="739.0" width="9.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="39.8" y="750.0"></text>
</g>
<g>
<title>dyld_stub_binder (1 samples, 0.76%)</title><rect x="36.8" y="723.0" width="9.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="39.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="707.0" width="9.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="39.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="691.0" width="9.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="39.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="675.0" width="9.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="39.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="659.0" width="9.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="39.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="643.0" width="9.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="39.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="627.0" width="9.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="39.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.76%)</title><rect x="36.8" y="611.0" width="9.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="39.8" y="622.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$Poller.run (1 samples, 0.76%)</title><rect x="45.8" y="947.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.76%)</title><rect x="45.8" y="931.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.76%)</title><rect x="45.8" y="915.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.76%)</title><rect x="45.8" y="899.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (1 samples, 0.76%)</title><rect x="45.8" y="883.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (1 samples, 0.76%)</title><rect x="45.8" y="867.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.8" y="878.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.76%)</title><rect x="45.8" y="851.0" width="8.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="48.8" y="862.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/threads/TaskThread$WrappingRunnable.run (8 samples, 6.06%)</title><rect x="54.7" y="947.0" width="71.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.7" y="958.0">org/apac..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 6.06%)</title><rect x="54.7" y="931.0" width="71.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.7" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 6.06%)</title><rect x="54.7" y="915.0" width="71.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.7" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 3.79%)</title><rect x="54.7" y="899.0" width="44.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.7" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (5 samples, 3.79%)</title><rect x="54.7" y="883.0" width="44.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.7" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (5 samples, 3.79%)</title><rect x="54.7" y="867.0" width="44.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.7" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (5 samples, 3.79%)</title><rect x="54.7" y="851.0" width="44.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.7" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (5 samples, 3.79%)</title><rect x="54.7" y="835.0" width="44.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.7" y="846.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (5 samples, 3.79%)</title><rect x="54.7" y="819.0" width="44.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.7" y="830.0">sun/..</text>
</g>
<g>
<title>Unsafe_Park (5 samples, 3.79%)</title><rect x="54.7" y="803.0" width="44.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="57.7" y="814.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 3.79%)</title><rect x="54.7" y="787.0" width="44.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.7" y="798.0">Park..</text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 3.79%)</title><rect x="54.7" y="771.0" width="44.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="57.7" y="782.0">__ps..</text>
</g>
<g>
<title>org/apache/tomcat/util/net/SocketProcessorBase.run (3 samples, 2.27%)</title><rect x="99.4" y="899.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.4" y="910.0">o..</text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioEndpoint$SocketProcessor.doRun (3 samples, 2.27%)</title><rect x="99.4" y="883.0" width="26.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.4" y="894.0">o..</text>
</g>
<g>
<title>org/apache/coyote/AbstractProtocol$ConnectionHandler.process (3 samples, 2.27%)</title><rect x="99.4" y="867.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.4" y="878.0">o..</text>
</g>
<g>
<title>org/apache/coyote/AbstractProcessorLight.process (3 samples, 2.27%)</title><rect x="99.4" y="851.0" width="26.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="862.0">o..</text>
</g>
<g>
<title>org/apache/coyote/http11/Http11Processor.service (3 samples, 2.27%)</title><rect x="99.4" y="835.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.4" y="846.0">o..</text>
</g>
<g>
<title>org/apache/catalina/connector/CoyoteAdapter.service (3 samples, 2.27%)</title><rect x="99.4" y="819.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.4" y="830.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/StandardEngineValve.invoke (3 samples, 2.27%)</title><rect x="99.4" y="803.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.4" y="814.0">o..</text>
</g>
<g>
<title>org/apache/catalina/valves/ErrorReportValve.invoke (3 samples, 2.27%)</title><rect x="99.4" y="787.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.4" y="798.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/StandardHostValve.invoke (3 samples, 2.27%)</title><rect x="99.4" y="771.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="782.0">o..</text>
</g>
<g>
<title>org/apache/catalina/authenticator/AuthenticatorBase.invoke (3 samples, 2.27%)</title><rect x="99.4" y="755.0" width="26.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.4" y="766.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/StandardContextValve.invoke (3 samples, 2.27%)</title><rect x="99.4" y="739.0" width="26.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.4" y="750.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/StandardWrapperValve.invoke (3 samples, 2.27%)</title><rect x="99.4" y="723.0" width="26.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.4" y="734.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (3 samples, 2.27%)</title><rect x="99.4" y="707.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.4" y="718.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (3 samples, 2.27%)</title><rect x="99.4" y="691.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.4" y="702.0">o..</text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (3 samples, 2.27%)</title><rect x="99.4" y="675.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.4" y="686.0">o..</text>
</g>
<g>
<title>org/springframework/web/filter/CharacterEncodingFilter.doFilterInternal (3 samples, 2.27%)</title><rect x="99.4" y="659.0" width="26.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="670.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (3 samples, 2.27%)</title><rect x="99.4" y="643.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.4" y="654.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (3 samples, 2.27%)</title><rect x="99.4" y="627.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.4" y="638.0">o..</text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (3 samples, 2.27%)</title><rect x="99.4" y="611.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="622.0">o..</text>
</g>
<g>
<title>org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.doFilterInternal (3 samples, 2.27%)</title><rect x="99.4" y="595.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.4" y="606.0">o..</text>
</g>
<g>
<title>org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.filterAndRecordMetrics (3 samples, 2.27%)</title><rect x="99.4" y="579.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.4" y="590.0">o..</text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="563.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.4" y="574.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2 samples, 1.52%)</title><rect x="99.4" y="547.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.4" y="558.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="531.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="542.0"></text>
</g>
<g>
<title>org/springframework/web/filter/HiddenHttpMethodFilter.doFilterInternal (2 samples, 1.52%)</title><rect x="99.4" y="515.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.4" y="526.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="499.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.4" y="510.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2 samples, 1.52%)</title><rect x="99.4" y="483.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.4" y="494.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="467.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.4" y="478.0"></text>
</g>
<g>
<title>org/springframework/web/filter/FormContentFilter.doFilterInternal (2 samples, 1.52%)</title><rect x="99.4" y="451.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.4" y="462.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="435.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.4" y="446.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (2 samples, 1.52%)</title><rect x="99.4" y="419.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.4" y="430.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (2 samples, 1.52%)</title><rect x="99.4" y="403.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="414.0"></text>
</g>
<g>
<title>org/springframework/web/filter/RequestContextFilter.doFilterInternal (2 samples, 1.52%)</title><rect x="99.4" y="387.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.4" y="398.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.doFilter (1 samples, 0.76%)</title><rect x="99.4" y="371.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="382.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ApplicationFilterChain.internalDoFilter (1 samples, 0.76%)</title><rect x="99.4" y="355.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.4" y="366.0"></text>
</g>
<g>
<title>org/springframework/web/filter/OncePerRequestFilter.doFilter (1 samples, 0.76%)</title><rect x="99.4" y="339.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/web/trace/servlet/HttpTraceFilter.doFilterInternal (1 samples, 0.76%)</title><rect x="99.4" y="323.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.4" y="334.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpExchangeTracer.receivedRequest (1 samples, 0.76%)</title><rect x="99.4" y="307.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.4" y="318.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpTrace.&lt;init&gt; (1 samples, 0.76%)</title><rect x="99.4" y="291.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.4" y="302.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpTrace$Request.&lt;init&gt; (1 samples, 0.76%)</title><rect x="99.4" y="275.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.4" y="286.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpTrace$Request.&lt;init&gt; (1 samples, 0.76%)</title><rect x="99.4" y="259.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.4" y="270.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpExchangeTracer$FilteredTraceableRequest.getHeaders (1 samples, 0.76%)</title><rect x="99.4" y="243.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.4" y="254.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpExchangeTracer.access$200 (1 samples, 0.76%)</title><rect x="99.4" y="227.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.4" y="238.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpExchangeTracer.getHeadersIfIncluded (1 samples, 0.76%)</title><rect x="99.4" y="211.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="222.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/trace/http/HttpExchangeTracer$FilteredTraceableRequest$$Lambda$590/2011791043.get (1 samples, 0.76%)</title><rect x="99.4" y="195.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.4" y="206.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.getHeaders (1 samples, 0.76%)</title><rect x="99.4" y="179.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.4" y="190.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.extractHeaders (1 samples, 0.76%)</title><rect x="99.4" y="163.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.4" y="174.0"></text>
</g>
<g>
<title>org/apache/catalina/connector/RequestFacade.getHeaderNames (1 samples, 0.76%)</title><rect x="99.4" y="147.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="158.0"></text>
</g>
<g>
<title>org/springframework/web/filter/RequestContextFilter.initContextHolders (1 samples, 0.76%)</title><rect x="108.3" y="371.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.3" y="382.0"></text>
</g>
<g>
<title>org/apache/commons/logging/LogAdapter$Slf4jLog.isTraceEnabled (1 samples, 0.76%)</title><rect x="108.3" y="355.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.76%)</title><rect x="108.3" y="339.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.76%)</title><rect x="108.3" y="323.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.76%)</title><rect x="108.3" y="307.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.76%)</title><rect x="108.3" y="291.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.3" y="302.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.record (1 samples, 0.76%)</title><rect x="117.3" y="563.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.3" y="574.0"></text>
</g>
<g>
<title>org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.stop (1 samples, 0.76%)</title><rect x="117.3" y="547.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.3" y="558.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/Timer$Sample.stop (1 samples, 0.76%)</title><rect x="117.3" y="531.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.3" y="542.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/AbstractTimer.record (1 samples, 0.76%)</title><rect x="117.3" y="515.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.3" y="526.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/cumulative/CumulativeTimer.recordNonNegative (1 samples, 0.76%)</title><rect x="117.3" y="499.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.3" y="510.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/distribution/TimeWindowMax.record (1 samples, 0.76%)</title><rect x="117.3" y="483.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.3" y="494.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/distribution/TimeWindowMax.rotate (1 samples, 0.76%)</title><rect x="117.3" y="467.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.3" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.76%)</title><rect x="117.3" y="451.0" width="8.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="120.3" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.76%)</title><rect x="117.3" y="435.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.3" y="446.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.76%)</title><rect x="117.3" y="419.0" width="8.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="120.3" y="430.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.76%)</title><rect x="117.3" y="403.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="120.3" y="414.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.76%)</title><rect x="117.3" y="387.0" width="8.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.3" y="398.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.76%)</title><rect x="117.3" y="371.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="120.3" y="382.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.76%)</title><rect x="117.3" y="355.0" width="8.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="120.3" y="366.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.76%)</title><rect x="117.3" y="339.0" width="8.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="120.3" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.76%)</title><rect x="117.3" y="323.0" width="8.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="120.3" y="334.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.run (24 samples, 18.18%)</title><rect x="126.2" y="947.0" width="214.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.2" y="958.0">org/springframework/boot/dev..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.scan (24 samples, 18.18%)</title><rect x="126.2" y="931.0" width="214.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.2" y="942.0">org/springframework/boot/dev..</text>
</g>
<g>
<title>java/lang/Thread.sleep (4 samples, 3.03%)</title><rect x="126.2" y="915.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.2" y="926.0">jav..</text>
</g>
<g>
<title>JVM_Sleep (4 samples, 3.03%)</title><rect x="126.2" y="899.0" width="35.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="129.2" y="910.0">JVM..</text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (4 samples, 3.03%)</title><rect x="126.2" y="883.0" width="35.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.2" y="894.0">os:..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 3.03%)</title><rect x="126.2" y="867.0" width="35.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="129.2" y="878.0">os:..</text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 3.03%)</title><rect x="126.2" y="851.0" width="35.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="129.2" y="862.0">__p..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.getCurrentSnapshots (19 samples, 14.39%)</title><rect x="162.0" y="915.0" width="169.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.0" y="926.0">org/springframework/bo..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.&lt;init&gt; (19 samples, 14.39%)</title><rect x="162.0" y="899.0" width="169.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.0" y="910.0">org/springframework/bo..</text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.76%)</title><rect x="162.0" y="883.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.0" y="894.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.76%)</title><rect x="162.0" y="867.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.0" y="878.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.76%)</title><rect x="162.0" y="851.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.0" y="862.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="162.0" y="835.0" width="8.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="165.0" y="846.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (18 samples, 13.64%)</title><rect x="170.9" y="883.0" width="160.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.9" y="894.0">org/springframework/..</text>
</g>
<g>
<title>java/io/File.listFiles (6 samples, 4.55%)</title><rect x="170.9" y="867.0" width="53.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="878.0">java/..</text>
</g>
<g>
<title>java/io/File.list (6 samples, 4.55%)</title><rect x="170.9" y="851.0" width="53.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.9" y="862.0">java/..</text>
</g>
<g>
<title>java/io/UnixFileSystem.list (6 samples, 4.55%)</title><rect x="170.9" y="835.0" width="53.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.9" y="846.0">java/..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (6 samples, 4.55%)</title><rect x="170.9" y="819.0" width="53.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="173.9" y="830.0">Java_..</text>
</g>
<g>
<title>readdir_r$INODE64 (1 samples, 0.76%)</title><rect x="170.9" y="803.0" width="8.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="173.9" y="814.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="170.9" y="787.0" width="8.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="173.9" y="798.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 3.79%)</title><rect x="179.8" y="803.0" width="44.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="182.8" y="814.0">rpc_..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (12 samples, 9.09%)</title><rect x="224.5" y="867.0" width="107.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.5" y="878.0">org/springfra..</text>
</g>
<g>
<title>java/io/File.listFiles (1 samples, 0.76%)</title><rect x="224.5" y="851.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.5" y="862.0"></text>
</g>
<g>
<title>java/io/File.list (1 samples, 0.76%)</title><rect x="224.5" y="835.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.list (1 samples, 0.76%)</title><rect x="224.5" y="819.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="830.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (1 samples, 0.76%)</title><rect x="224.5" y="803.0" width="9.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="227.5" y="814.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.76%)</title><rect x="224.5" y="787.0" width="9.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="227.5" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (1 samples, 0.76%)</title><rect x="233.5" y="851.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.5" y="862.0"></text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.76%)</title><rect x="233.5" y="835.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.5" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.76%)</title><rect x="233.5" y="819.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.5" y="830.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.76%)</title><rect x="233.5" y="803.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.5" y="814.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="233.5" y="787.0" width="8.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="236.5" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (10 samples, 7.58%)</title><rect x="242.4" y="851.0" width="89.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.4" y="862.0">org/spring..</text>
</g>
<g>
<title>java/io/File.listFiles (1 samples, 0.76%)</title><rect x="242.4" y="835.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.4" y="846.0"></text>
</g>
<g>
<title>java/io/File.list (1 samples, 0.76%)</title><rect x="242.4" y="819.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.4" y="830.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.list (1 samples, 0.76%)</title><rect x="242.4" y="803.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.4" y="814.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (1 samples, 0.76%)</title><rect x="242.4" y="787.0" width="9.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="245.4" y="798.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.76%)</title><rect x="242.4" y="771.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="245.4" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (9 samples, 6.82%)</title><rect x="251.4" y="835.0" width="80.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.4" y="846.0">org/sprin..</text>
</g>
<g>
<title>java/io/File.listFiles (2 samples, 1.52%)</title><rect x="251.4" y="819.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.4" y="830.0"></text>
</g>
<g>
<title>java/io/File.list (2 samples, 1.52%)</title><rect x="251.4" y="803.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.4" y="814.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.list (2 samples, 1.52%)</title><rect x="251.4" y="787.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.4" y="798.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (2 samples, 1.52%)</title><rect x="251.4" y="771.0" width="17.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="254.4" y="782.0"></text>
</g>
<g>
<title>newStringPlatform (1 samples, 0.76%)</title><rect x="251.4" y="755.0" width="8.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="254.4" y="766.0"></text>
</g>
<g>
<title>__CFStringAppendBytes (1 samples, 0.76%)</title><rect x="251.4" y="739.0" width="8.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="254.4" y="750.0"></text>
</g>
<g>
<title>__CFStrAllocateMutableContents (1 samples, 0.76%)</title><rect x="251.4" y="723.0" width="8.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="254.4" y="734.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.76%)</title><rect x="260.3" y="755.0" width="8.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="263.3" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (7 samples, 5.30%)</title><rect x="269.2" y="819.0" width="62.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.2" y="830.0">org/sp..</text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.76%)</title><rect x="269.2" y="803.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.2" y="814.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.76%)</title><rect x="269.2" y="787.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.2" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.76%)</title><rect x="269.2" y="771.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="782.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="269.2" y="755.0" width="9.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="272.2" y="766.0"></text>
</g>
<g>
<title>java/io/File.listFiles (1 samples, 0.76%)</title><rect x="278.2" y="803.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.2" y="814.0"></text>
</g>
<g>
<title>java/io/File.list (1 samples, 0.76%)</title><rect x="278.2" y="787.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.list (1 samples, 0.76%)</title><rect x="278.2" y="771.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.2" y="782.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (1 samples, 0.76%)</title><rect x="278.2" y="755.0" width="8.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="281.2" y="766.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.76%)</title><rect x="278.2" y="739.0" width="8.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="281.2" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (5 samples, 3.79%)</title><rect x="287.1" y="803.0" width="44.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.1" y="814.0">org/..</text>
</g>
<g>
<title>java/io/File.exists (3 samples, 2.27%)</title><rect x="287.1" y="787.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.1" y="798.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (3 samples, 2.27%)</title><rect x="287.1" y="771.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.1" y="782.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (3 samples, 2.27%)</title><rect x="287.1" y="755.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.1" y="766.0">j..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.76%)</title><rect x="287.1" y="739.0" width="9.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="290.1" y="750.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.76%)</title><rect x="287.1" y="723.0" width="9.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="290.1" y="734.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.52%)</title><rect x="296.1" y="739.0" width="17.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="299.1" y="750.0"></text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.76%)</title><rect x="313.9" y="787.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.9" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.76%)</title><rect x="313.9" y="771.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.9" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.76%)</title><rect x="313.9" y="755.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.9" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="313.9" y="739.0" width="9.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="316.9" y="750.0"></text>
</g>
<g>
<title>java/io/File.lastModified (1 samples, 0.76%)</title><rect x="322.9" y="787.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.9" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getLastModifiedTime (1 samples, 0.76%)</title><rect x="322.9" y="771.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.9" y="782.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.76%)</title><rect x="322.9" y="755.0" width="8.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="325.9" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.isDifferent (1 samples, 0.76%)</title><rect x="331.8" y="915.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="926.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.equals (1 samples, 0.76%)</title><rect x="331.8" y="899.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.76%)</title><rect x="331.8" y="883.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.8" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.76%)</title><rect x="331.8" y="867.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.8" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.76%)</title><rect x="331.8" y="851.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.8" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.76%)</title><rect x="331.8" y="835.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.8" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.76%)</title><rect x="331.8" y="819.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.8" y="830.0"></text>
</g>
<g>
<title>org/LatencyUtils/SimplePauseDetector$SimplePauseDetectorThread.run (21 samples, 15.91%)</title><rect x="340.8" y="963.0" width="187.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.8" y="974.0">org/LatencyUtils/SimpleP..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.76%)</title><rect x="349.7" y="947.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.7" y="958.0"></text>
</g>
<g>
<title>org/LatencyUtils/TimeServices.sleepNanos (19 samples, 14.39%)</title><rect x="358.6" y="947.0" width="169.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.6" y="958.0">org/LatencyUtils/TimeS..</text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.sleep (19 samples, 14.39%)</title><rect x="358.6" y="931.0" width="169.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.6" y="942.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/lang/Thread.sleep (19 samples, 14.39%)</title><rect x="358.6" y="915.0" width="169.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.6" y="926.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>java/lang/Thread.sleep (19 samples, 14.39%)</title><rect x="358.6" y="899.0" width="169.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.6" y="910.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>JVM_Sleep (18 samples, 13.64%)</title><rect x="358.6" y="883.0" width="160.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="361.6" y="894.0">JVM_Sleep</text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (18 samples, 13.64%)</title><rect x="358.6" y="867.0" width="160.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="361.6" y="878.0">os::sleep(Thread*, l..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (18 samples, 13.64%)</title><rect x="358.6" y="851.0" width="160.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="361.6" y="862.0">os::PlatformEvent::p..</text>
</g>
<g>
<title>__psynch_cvwait (18 samples, 13.64%)</title><rect x="358.6" y="835.0" width="160.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="361.6" y="846.0">__psynch_cvwait</text>
</g>
<g>
<title>JavaThreadStatusChanger::~JavaThreadStatusChanger() (1 samples, 0.76%)</title><rect x="519.5" y="883.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="522.5" y="894.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioBlockingSelector$BlockPoller.run (2 samples, 1.52%)</title><rect x="528.5" y="963.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2 samples, 1.52%)</title><rect x="528.5" y="947.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 1.52%)</title><rect x="528.5" y="931.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2 samples, 1.52%)</title><rect x="528.5" y="915.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (2 samples, 1.52%)</title><rect x="528.5" y="899.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (2 samples, 1.52%)</title><rect x="528.5" y="883.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.5" y="894.0"></text>
</g>
<g>
<title>kevent (2 samples, 1.52%)</title><rect x="528.5" y="867.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="531.5" y="878.0"></text>
</g>
<g>
<title>thread_start (72 samples, 54.55%)</title><rect x="546.4" y="963.0" width="643.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="549.4" y="974.0">thread_start</text>
</g>
<g>
<title>_pthread_start (72 samples, 54.55%)</title><rect x="546.4" y="947.0" width="643.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="549.4" y="958.0">_pthread_start</text>
</g>
<g>
<title>java_start(Thread*) (72 samples, 54.55%)</title><rect x="546.4" y="931.0" width="643.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="549.4" y="942.0">java_start(Thread*)</text>
</g>
<g>
<title>JavaThread::run() (15 samples, 11.36%)</title><rect x="546.4" y="915.0" width="134.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="549.4" y="926.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 11.36%)</title><rect x="546.4" y="899.0" width="134.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="549.4" y="910.0">JavaThread::threa..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (14 samples, 10.61%)</title><rect x="546.4" y="883.0" width="125.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="549.4" y="894.0">CompileBroker::..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 9.09%)</title><rect x="546.4" y="867.0" width="107.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="549.4" y="878.0">CompileBroker..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (9 samples, 6.82%)</title><rect x="546.4" y="851.0" width="80.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="549.4" y="862.0">C2Compile..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (9 samples, 6.82%)</title><rect x="546.4" y="835.0" width="80.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="549.4" y="846.0">Compile::..</text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 3.03%)</title><rect x="546.4" y="819.0" width="35.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="549.4" y="830.0">Com..</text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 3.03%)</title><rect x="546.4" y="803.0" width="35.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="549.4" y="814.0">Pha..</text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.76%)</title><rect x="546.4" y="787.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="549.4" y="798.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.76%)</title><rect x="546.4" y="771.0" width="8.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="549.4" y="782.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.76%)</title><rect x="546.4" y="755.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="549.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.76%)</title><rect x="555.3" y="787.0" width="8.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="558.3" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.76%)</title><rect x="564.2" y="787.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="567.2" y="798.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.76%)</title><rect x="573.2" y="787.0" width="8.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="576.2" y="798.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.76%)</title><rect x="573.2" y="771.0" width="8.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="576.2" y="782.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (1 samples, 0.76%)</title><rect x="573.2" y="755.0" width="8.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="576.2" y="766.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.76%)</title><rect x="573.2" y="739.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="576.2" y="750.0"></text>
</g>
<g>
<title>LRG::compute_degree(LRG&amp;) const (1 samples, 0.76%)</title><rect x="573.2" y="723.0" width="8.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="576.2" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 1.52%)</title><rect x="582.1" y="819.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.1" y="830.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.76%)</title><rect x="582.1" y="803.0" width="9.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="585.1" y="814.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.76%)</title><rect x="582.1" y="787.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="585.1" y="798.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.76%)</title><rect x="582.1" y="771.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="585.1" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (1 samples, 0.76%)</title><rect x="591.1" y="803.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="594.1" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.76%)</title><rect x="591.1" y="787.0" width="8.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="594.1" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.76%)</title><rect x="600.0" y="819.0" width="8.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="603.0" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.76%)</title><rect x="600.0" y="803.0" width="8.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="603.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.76%)</title><rect x="600.0" y="787.0" width="8.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="603.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.76%)</title><rect x="600.0" y="771.0" width="8.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="603.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.76%)</title><rect x="600.0" y="755.0" width="8.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="603.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.76%)</title><rect x="600.0" y="739.0" width="8.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.76%)</title><rect x="600.0" y="723.0" width="8.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.0" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.76%)</title><rect x="600.0" y="707.0" width="8.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="603.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.76%)</title><rect x="600.0" y="691.0" width="8.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="603.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.76%)</title><rect x="600.0" y="675.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="603.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.76%)</title><rect x="600.0" y="659.0" width="8.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="603.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.76%)</title><rect x="600.0" y="643.0" width="8.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="603.0" y="654.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.76%)</title><rect x="600.0" y="627.0" width="8.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.76%)</title><rect x="600.0" y="611.0" width="8.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.76%)</title><rect x="600.0" y="595.0" width="8.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="603.0" y="606.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.76%)</title><rect x="600.0" y="579.0" width="8.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.76%)</title><rect x="600.0" y="563.0" width="8.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="603.0" y="574.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 1.52%)</title><rect x="608.9" y="819.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="611.9" y="830.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.76%)</title><rect x="608.9" y="803.0" width="9.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="611.9" y="814.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.76%)</title><rect x="608.9" y="787.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="611.9" y="798.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.76%)</title><rect x="608.9" y="771.0" width="9.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="611.9" y="782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.76%)</title><rect x="608.9" y="755.0" width="9.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="611.9" y="766.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.76%)</title><rect x="608.9" y="739.0" width="9.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="611.9" y="750.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event() (1 samples, 0.76%)</title><rect x="617.9" y="803.0" width="8.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="620.9" y="814.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.76%)</title><rect x="617.9" y="787.0" width="8.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="620.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.76%)</title><rect x="617.9" y="771.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="620.9" y="782.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (3 samples, 2.27%)</title><rect x="626.8" y="851.0" width="26.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="629.8" y="862.0">C..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (3 samples, 2.27%)</title><rect x="626.8" y="835.0" width="26.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="629.8" y="846.0">C..</text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 2.27%)</title><rect x="626.8" y="819.0" width="26.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="629.8" y="830.0">C..</text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.76%)</title><rect x="626.8" y="803.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="629.8" y="814.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.76%)</title><rect x="626.8" y="787.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="629.8" y="798.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.76%)</title><rect x="626.8" y="771.0" width="9.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="629.8" y="782.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.76%)</title><rect x="626.8" y="755.0" width="9.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="629.8" y="766.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.76%)</title><rect x="626.8" y="739.0" width="9.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="629.8" y="750.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.76%)</title><rect x="626.8" y="723.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="629.8" y="734.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.76%)</title><rect x="626.8" y="707.0" width="9.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="629.8" y="718.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.76%)</title><rect x="626.8" y="691.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="629.8" y="702.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (2 samples, 1.52%)</title><rect x="635.8" y="803.0" width="17.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="638.8" y="814.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 1.52%)</title><rect x="635.8" y="787.0" width="17.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="638.8" y="798.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (2 samples, 1.52%)</title><rect x="635.8" y="771.0" width="17.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="638.8" y="782.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (2 samples, 1.52%)</title><rect x="635.8" y="755.0" width="17.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="638.8" y="766.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (2 samples, 1.52%)</title><rect x="635.8" y="739.0" width="17.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="638.8" y="750.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (2 samples, 1.52%)</title><rect x="635.8" y="723.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="638.8" y="734.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 1.52%)</title><rect x="653.6" y="867.0" width="17.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="656.6" y="878.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.76%)</title><rect x="653.6" y="851.0" width="9.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="656.6" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.76%)</title><rect x="653.6" y="835.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="656.6" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.76%)</title><rect x="653.6" y="819.0" width="9.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.76%)</title><rect x="653.6" y="803.0" width="9.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="656.6" y="814.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.76%)</title><rect x="662.6" y="851.0" width="8.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="665.6" y="862.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.76%)</title><rect x="662.6" y="835.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="665.6" y="846.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.76%)</title><rect x="662.6" y="819.0" width="8.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="665.6" y="830.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.76%)</title><rect x="662.6" y="803.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="665.6" y="814.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.76%)</title><rect x="662.6" y="787.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="665.6" y="798.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.76%)</title><rect x="671.5" y="883.0" width="9.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="674.5" y="894.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.76%)</title><rect x="671.5" y="867.0" width="9.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="674.5" y="878.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.76%)</title><rect x="671.5" y="851.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.5" y="862.0"></text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (1 samples, 0.76%)</title><rect x="671.5" y="835.0" width="9.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="674.5" y="846.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.76%)</title><rect x="671.5" y="819.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.5" y="830.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.76%)</title><rect x="671.5" y="803.0" width="9.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="674.5" y="814.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.76%)</title><rect x="671.5" y="787.0" width="9.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="674.5" y="798.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.76%)</title><rect x="671.5" y="771.0" width="9.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="674.5" y="782.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.76%)</title><rect x="671.5" y="755.0" width="9.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="674.5" y="766.0"></text>
</g>
<g>
<title>small_malloc_should_clear (1 samples, 0.76%)</title><rect x="671.5" y="739.0" width="9.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="674.5" y="750.0"></text>
</g>
<g>
<title>small_malloc_from_free_list (1 samples, 0.76%)</title><rect x="671.5" y="723.0" width="9.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="674.5" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 1.52%)</title><rect x="680.5" y="915.0" width="17.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="683.5" y="926.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 1.52%)</title><rect x="680.5" y="899.0" width="17.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="683.5" y="910.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 1.52%)</title><rect x="680.5" y="883.0" width="17.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="683.5" y="894.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 1.52%)</title><rect x="680.5" y="867.0" width="17.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="683.5" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 1.52%)</title><rect x="680.5" y="851.0" width="17.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="683.5" y="862.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 1.52%)</title><rect x="680.5" y="835.0" width="17.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="683.5" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (55 samples, 41.67%)</title><rect x="698.3" y="915.0" width="491.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="701.3" y="926.0">WatcherThread::run()</text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.76%)</title><rect x="698.3" y="899.0" width="9.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="701.3" y="910.0"></text>
</g>
<g>
<title>StatSampler::sample_data(PerfDataList*) (1 samples, 0.76%)</title><rect x="698.3" y="883.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="701.3" y="894.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.76%)</title><rect x="698.3" y="867.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="701.3" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (54 samples, 40.91%)</title><rect x="707.3" y="899.0" width="482.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="710.3" y="910.0">WatcherThread::sleep() const</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (54 samples, 40.91%)</title><rect x="707.3" y="883.0" width="482.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="710.3" y="894.0">Monitor::wait(bool, long, bool)</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (54 samples, 40.91%)</title><rect x="707.3" y="867.0" width="482.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="710.3" y="878.0">Monitor::IWait(Thread*, long)</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (54 samples, 40.91%)</title><rect x="707.3" y="851.0" width="482.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.3" y="862.0">os::PlatformEvent::park(long)</text>
</g>
<g>
<title>__psynch_cvwait (53 samples, 40.15%)</title><rect x="716.2" y="835.0" width="473.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="719.2" y="846.0">__psynch_cvwait</text>
</g>
</g>
</svg>
